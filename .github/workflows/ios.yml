name: iOS CI

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name to build (e.g., sample_app)'
        required: true
        default: 'sample_app'

jobs:
  build:
    runs-on: macos-14
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          cache: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: fastlane

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: tools/package*.json

      - name: Install dependencies
        run: |
          cd fastlane && bundle install
          cd tools && npm install --silent 2>/dev/null || echo "No package.json found in tools"

      - name: Determine app directory
        id: app_dir
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            APP_NAME="${{ github.event.inputs.app_name }}"
          else
            # Extract app name from tag or use sample_app
            APP_NAME="sample_app"
          fi
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_dir=apps/$APP_NAME" >> $GITHUB_OUTPUT

      - name: Flutter pub get
        run: |
          cd ${{ steps.app_dir.outputs.app_dir }}
          flutter pub get

      - name: Setup iOS signing
        env:
          APP_STORE_CONNECT_API_KEY_JSON_BASE64: ${{ secrets.ASC_API_KEY_B64 }}
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          ASC_TEAM_ID: ${{ secrets.ASC_TEAM_ID }}
          DEVPORTAL_TEAM_ID: ${{ secrets.DEVPORTAL_TEAM_ID }}
        run: |
          # Decode and write App Store Connect API key
          if [ ! -z "$APP_STORE_CONNECT_API_KEY_JSON_BASE64" ]; then
            echo $APP_STORE_CONNECT_API_KEY_JSON_BASE64 | base64 --decode > /tmp/asc_api_key.p8
            echo "APP_STORE_CONNECT_API_KEY_PATH=/tmp/asc_api_key.p8" >> $GITHUB_ENV
          fi

      - name: Build and upload to TestFlight
        env:
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          ASC_TEAM_ID: ${{ secrets.ASC_TEAM_ID }}
          DEVPORTAL_TEAM_ID: ${{ secrets.DEVPORTAL_TEAM_ID }}
          APP_BUNDLE_ID: ${{ vars.APP_BUNDLE_ID }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
          APP_STORE_CONNECT_API_KEY_JSON_BASE64: ${{ secrets.ASC_API_KEY_B64 }}
        run: |
          cd fastlane
          bundle exec fastlane ios beta app_dir:../${{ steps.app_dir.outputs.app_dir }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts-${{ steps.app_dir.outputs.app_name }}
          path: |
            ${{ steps.app_dir.outputs.app_dir }}/build/
            fastlane/test_output/
          retention-days: 7

      - name: Clean up sensitive files
        if: always()
        run: |
          rm -f /tmp/asc_api_key.p8